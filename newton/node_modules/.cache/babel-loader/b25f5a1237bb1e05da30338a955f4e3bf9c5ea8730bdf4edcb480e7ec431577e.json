{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\Desktop\\\\Newton Project\\\\newton\\\\src\\\\components\\\\ChatGPT\\\\ChatGPT.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport styles from \"./ChatGPT.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatGPT() {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const HTTP = \"http://localhost:8080/chat\";\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`${HTTP}`, {\n      prompt\n    }).then(res => {\n      setResponse(res.data);\n      console.log(prompt);\n    }).catch(error => {\n      console.log(error);\n    });\n    setPrompt(\"\");\n  };\n  const handlePrompt = e => {\n    setPrompt(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container container-sm p-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title text-center\",\n      children: \"ChatBot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"prompt\",\n          children: \"Ask questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"prompt\",\n          className: \"shadow-sm\",\n          type: \"text\",\n          placeholder: \"Type your question here...\",\n          value: prompt,\n          onChange: handlePrompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-accept w-100\",\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"send-btn\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-darkGreen mt-2 p-1 border-5\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-light\",\n        style: {\n          marginTop: \"10px\"\n        },\n        children: response ? response : \"Ask me anything...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatGPT, \"Ar4Tnmewu0sqKOrbtCZiqst00xs=\");\n_c = ChatGPT;\nvar _c;\n$RefreshReg$(_c, \"ChatGPT\");","map":{"version":3,"names":["React","useState","axios","styles","jsxDEV","_jsxDEV","ChatGPT","_s","prompt","setPrompt","response","setResponse","HTTP","handleSubmit","e","preventDefault","post","then","res","data","console","log","catch","error","handlePrompt","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","placeholder","onChange","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/vijay/Desktop/Newton Project/newton/src/components/ChatGPT/ChatGPT.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from \"./ChatGPT.css\";\r\n\r\nexport default function ChatGPT() {\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const HTTP = \"http://localhost:8080/chat\";\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(`${HTTP}`, { prompt })\r\n      .then((res) => {\r\n        setResponse(res.data);\r\n        console.log(prompt);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    setPrompt(\"\");\r\n  };\r\n\r\n  const handlePrompt = (e) => {\r\n    setPrompt(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container container-sm p-1\">\r\n      <h1 className=\"title text-center\">ChatBot</h1>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"prompt\">Ask questions</label>\r\n          <input\r\n            id=\"prompt\"\r\n            className=\"shadow-sm\"\r\n            type=\"text\"\r\n            placeholder=\"Type your question here...\"\r\n            value={prompt}\r\n            onChange={handlePrompt}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-accept w-100\" type=\"submit\">\r\n          <span className=\"send-btn\">Send</span>\r\n        </button>\r\n      </form>\r\n      <div className=\"bg-darkGreen mt-2 p-1 border-5\">\r\n        <p className=\"text-light\" style={{ marginTop: \"10px\" }}>\r\n          {response ? response : \"Ask me anything...\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}