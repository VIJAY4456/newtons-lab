{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\Desktop\\\\Newton Project\\\\newton\\\\src\\\\index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport * as React from 'react';\nimport { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootElement = document.getElementById('root');\nconst root = createRoot(rootElement);\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst bodyParser = require(\"body-parser\");\nconst {\n  Configuration,\n  OpenAIApi\n} = require(\"openai\");\nconst config = new Configuration({\n  apiKey: \"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\"\n});\nconst openai = new OpenAIApi(config);\n\n// Setup server\n\nconst app = express();\napp.use(bodyParser.json());\napp.use(cors());\n\n// endpoint for ChatGPT\n\napp.post(\"/chat\", async (req, res) => {\n  const {\n    prompt\n  } = req.body;\n  const completion = await openai.createCompletion({\n    model: \"text-davinci-003\",\n    max_tokens: 512,\n    temperature: 0,\n    prompt: prompt\n  });\n  res.send(completion.data.choices[0].text);\n});\nconst PORT = 8080;\napp.listen(PORT, () => {\n  console.log(`Server is running on port: ${PORT}`);\n});\n\n//run node server.js\n\nroot.render( /*#__PURE__*/_jsxDEV(StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 71,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","StrictMode","createRoot","BrowserRouter","App","jsxDEV","_jsxDEV","rootElement","document","getElementById","root","express","require","cors","bodyParser","Configuration","OpenAIApi","config","apiKey","openai","app","use","json","post","req","res","prompt","body","completion","createCompletion","model","max_tokens","temperature","send","data","choices","text","PORT","listen","console","log","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/vijay/Desktop/Newton Project/newton/src/index.js"],"sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport * as React from 'react';\nimport { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nconst root = createRoot(rootElement);\nconst express = require(\"express\");\n\nconst cors = require(\"cors\");\n\nconst bodyParser = require(\"body-parser\");\n\nconst { Configuration, OpenAIApi } = require(\"openai\");\n\nconst config = new Configuration({\n  apiKey: \"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\",\n});\n\nconst openai = new OpenAIApi(config);\n\n// Setup server\n\nconst app = express();\napp.use(bodyParser.json());\napp.use(cors());\n\n// endpoint for ChatGPT\n\napp.post(\"/chat\", async (req, res) => {\n  const { prompt } = req.body;\n\n  const completion = await openai.createCompletion({\n    model: \"text-davinci-003\",\n    max_tokens: 512,\n    temperature: 0,\n    prompt: prompt,\n  });\n  res.send(completion.data.choices[0].text);\n});\n\nconst PORT = 8080;\n\napp.listen(PORT, () => {\n  console.log(`Server is running on port: ${PORT}`);\n});\n\n//run node server.js\n\nroot.render(\n  <StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </StrictMode>\n);"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACnD,MAAMC,IAAI,GAAGR,UAAU,CAACK,WAAW,CAAC;AACpC,MAAMI,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAElC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEzC,MAAM;EAAEG,aAAa;EAAEC;AAAU,CAAC,GAAGJ,OAAO,CAAC,QAAQ,CAAC;AAEtD,MAAMK,MAAM,GAAG,IAAIF,aAAa,CAAC;EAC/BG,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAG,IAAIH,SAAS,CAACC,MAAM,CAAC;;AAEpC;;AAEA,MAAMG,GAAG,GAAGT,OAAO,CAAC,CAAC;AACrBS,GAAG,CAACC,GAAG,CAACP,UAAU,CAACQ,IAAI,CAAC,CAAC,CAAC;AAC1BF,GAAG,CAACC,GAAG,CAACR,IAAI,CAAC,CAAC,CAAC;;AAEf;;AAEAO,GAAG,CAACG,IAAI,CAAC,OAAO,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACpC,MAAM;IAAEC;EAAO,CAAC,GAAGF,GAAG,CAACG,IAAI;EAE3B,MAAMC,UAAU,GAAG,MAAMT,MAAM,CAACU,gBAAgB,CAAC;IAC/CC,KAAK,EAAE,kBAAkB;IACzBC,UAAU,EAAE,GAAG;IACfC,WAAW,EAAE,CAAC;IACdN,MAAM,EAAEA;EACV,CAAC,CAAC;EACFD,GAAG,CAACQ,IAAI,CAACL,UAAU,CAACM,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;AAC3C,CAAC,CAAC;AAEF,MAAMC,IAAI,GAAG,IAAI;AAEjBjB,GAAG,CAACkB,MAAM,CAACD,IAAI,EAAE,MAAM;EACrBE,OAAO,CAACC,GAAG,CAAE,8BAA6BH,IAAK,EAAC,CAAC;AACnD,CAAC,CAAC;;AAEF;;AAEA3B,IAAI,CAAC+B,MAAM,eACTnC,OAAA,CAACL,UAAU;EAAAyC,QAAA,eACTpC,OAAA,CAACH,aAAa;IAAAuC,QAAA,eACZpC,OAAA,CAACF,GAAG;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACN,CACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}