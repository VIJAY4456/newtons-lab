{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\Desktop\\\\Newton Project\\\\newton\\\\src\\\\components\\\\Chatbot\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport bodyParser from \"body-parser\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = express();\napp.use(bodyParser.json());\napp.use(cors());\nconst config = new Configuration({\n  apiKey: \"Ysk-3mVAD6mv3kFG0cSKxgNeT3BlbkFJSG6h2oSL3JMEy7G46wzn\"\n});\nconst openai = new OpenAIApi(config);\napp.post(\"/chat\", async (req, res) => {\n  const {\n    prompt\n  } = req.body;\n  try {\n    const completion = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      max_tokens: 512,\n      temperature: 0,\n      prompt: prompt\n    });\n    res.send(completion.data.choices[0].text);\n  } catch (error) {\n    console.error(\"Error:\", error);\n    res.status(500).send(\"An error occurred while processing your request.\");\n  }\n});\nconst Chatbot = () => {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const HTTP = \"http://localhost:8080/chat\";\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsLoading(true);\n    axios.post(HTTP, {\n      prompt\n    }).then(res => {\n      setResponse(res.data);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      // Handle error, show error message to the user\n    }).finally(() => {\n      setIsLoading(false);\n    });\n    setPrompt(\"\");\n  };\n  const handlePrompt = e => {\n    setPrompt(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container container-sm p-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title text-center text-darkGreen\",\n      children: \"ChatGPT API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"prompt\",\n          children: \"Ask questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"prompt\",\n          className: \"shadow-sm\",\n          type: \"text\",\n          placeholder: \"Enter text\",\n          value: prompt,\n          onChange: handlePrompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-accept w-100\",\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? \"Loading...\" : \"Go\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-darkGreen mt-2 p-1 border-5\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-light\",\n        children: response || \"Ask me anything...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"hQccvEKqWrAa9NDiaEN5hBWztB4=\");\n_c = Chatbot;\nexport default Chatbot;\nconst PORT = 8080;\napp.listen(PORT, () => {\n  console.log(`Server is running on port: ${PORT}`);\n});\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","express","cors","bodyParser","Configuration","OpenAIApi","jsxDEV","_jsxDEV","app","use","json","config","apiKey","openai","post","req","res","prompt","body","completion","createCompletion","model","max_tokens","temperature","send","data","choices","text","error","console","status","Chatbot","_s","setPrompt","response","setResponse","isLoading","setIsLoading","HTTP","handleSubmit","e","preventDefault","then","catch","finally","handlePrompt","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","placeholder","onChange","disabled","_c","PORT","listen","log","$RefreshReg$"],"sources":["C:/Users/vijay/Desktop/Newton Project/newton/src/components/Chatbot/Chatbot.js"],"sourcesContent":["// App.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport express from \"express\";\r\nimport cors from \"cors\";\r\nimport bodyParser from \"body-parser\";\r\nimport { Configuration, OpenAIApi } from \"openai\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst app = express();\r\napp.use(bodyParser.json());\r\napp.use(cors());\r\n\r\nconst config = new Configuration({\r\n  apiKey: \"Ysk-3mVAD6mv3kFG0cSKxgNeT3BlbkFJSG6h2oSL3JMEy7G46wzn\",\r\n});\r\nconst openai = new OpenAIApi(config);\r\n\r\napp.post(\"/chat\", async (req, res) => {\r\n  const { prompt } = req.body;\r\n\r\n  try {\r\n    const completion = await openai.createCompletion({\r\n      model: \"text-davinci-003\",\r\n      max_tokens: 512,\r\n      temperature: 0,\r\n      prompt: prompt,\r\n    });\r\n    res.send(completion.data.choices[0].text);\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    res.status(500).send(\"An error occurred while processing your request.\");\r\n  }\r\n});\r\n\r\nconst Chatbot = () => {\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const HTTP = \"http://localhost:8080/chat\";\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    axios\r\n      .post(HTTP, { prompt })\r\n      .then((res) => {\r\n        setResponse(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n        // Handle error, show error message to the user\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n\r\n    setPrompt(\"\");\r\n  };\r\n\r\n  const handlePrompt = (e) => {\r\n    setPrompt(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container container-sm p-1\">\r\n      <h1 className=\"title text-center text-darkGreen\">ChatGPT API</h1>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"prompt\">Ask questions</label>\r\n          <input\r\n            id=\"prompt\"\r\n            className=\"shadow-sm\"\r\n            type=\"text\"\r\n            placeholder=\"Enter text\"\r\n            value={prompt}\r\n            onChange={handlePrompt}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-accept w-100\" type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? \"Loading...\" : \"Go\"}\r\n        </button>\r\n      </form>\r\n      <div className=\"bg-darkGreen mt-2 p-1 border-5\">\r\n        <p className=\"text-light\">{response || \"Ask me anything...\"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n\r\nconst PORT = 8080;\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on port: ${PORT}`);\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}